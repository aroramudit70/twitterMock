// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Mock of twitter for Squareboat assignment",
    "title": "TwitterMock",
    "contact": {
      "email": "aroramudit70@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "192.168.1.233",
  "basePath": "/mock",
  "paths": {
    "/feed": {
      "get": {
        "description": "Hear what everyone you are following wants to say",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Operation"
        ],
        "summary": "Get Feed of your users you are following",
        "operationId": "getFeed",
        "parameters": [
          {
            "type": "string",
            "name": "userName",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/follow/{userHandle}": {
      "get": {
        "description": "Follow other users to increase your social group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Operation"
        ],
        "summary": "Follow other users",
        "operationId": "follow",
        "parameters": [
          {
            "type": "string",
            "name": "userName",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "name": "userHandle",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/tweet": {
      "post": {
        "description": "Feature allows the user to express their emotions and thoughts about anything and everything within 240 words",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Operation"
        ],
        "summary": "Tweet about anything",
        "operationId": "postTweet",
        "parameters": [
          {
            "description": "Post your tweet",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tweet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "type": "string",
            "description": "The user name for login",
            "name": "username",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "The password for login in clear text",
            "name": "password",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "description": "Get you account with us in our mock twitter platform",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "SignUp to our mock twitter",
        "operationId": "signup",
        "parameters": [
          {
            "description": "Post your tweet",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrResponse": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Feed": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tweet"
      }
    },
    "Profile": {
      "type": "object",
      "required": [
        "userName",
        "name",
        "password"
      ],
      "properties": {
        "emailId": {
          "type": "string",
          "example": "abx@xyz.com"
        },
        "followingList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "userName": {
          "description": "Unique Name to indentify a user. Also termed as handle",
          "type": "string"
        }
      }
    },
    "Tweet": {
      "type": "object",
      "properties": {
        "tweet": {
          "type": "string",
          "maxLength": 280
        },
        "userName": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "scopes": {
        "read:pets": "read your pets",
        "write:pets": "modify pets in your account"
      }
    }
  },
  "tags": [
    {
      "description": "Authorization of users",
      "name": "user"
    },
    {
      "description": "Tweet Operations",
      "name": "Operation"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Mock of twitter for Squareboat assignment",
    "title": "TwitterMock",
    "contact": {
      "email": "aroramudit70@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "192.168.1.233",
  "basePath": "/mock",
  "paths": {
    "/feed": {
      "get": {
        "description": "Hear what everyone you are following wants to say",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Operation"
        ],
        "summary": "Get Feed of your users you are following",
        "operationId": "getFeed",
        "parameters": [
          {
            "type": "string",
            "name": "userName",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/follow/{userHandle}": {
      "get": {
        "description": "Follow other users to increase your social group",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Operation"
        ],
        "summary": "Follow other users",
        "operationId": "follow",
        "parameters": [
          {
            "type": "string",
            "name": "userName",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "name": "userHandle",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/tweet": {
      "post": {
        "description": "Feature allows the user to express their emotions and thoughts about anything and everything within 240 words",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Operation"
        ],
        "summary": "Tweet about anything",
        "operationId": "postTweet",
        "parameters": [
          {
            "description": "Post your tweet",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tweet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "type": "string",
            "description": "The user name for login",
            "name": "username",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "The password for login in clear text",
            "name": "password",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "description": "Get you account with us in our mock twitter platform",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "SignUp to our mock twitter",
        "operationId": "signup",
        "parameters": [
          {
            "description": "Post your tweet",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrResponse": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Feed": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tweet"
      }
    },
    "Profile": {
      "type": "object",
      "required": [
        "userName",
        "name",
        "password"
      ],
      "properties": {
        "emailId": {
          "type": "string",
          "example": "abx@xyz.com"
        },
        "followingList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "userName": {
          "description": "Unique Name to indentify a user. Also termed as handle",
          "type": "string"
        }
      }
    },
    "Tweet": {
      "type": "object",
      "properties": {
        "tweet": {
          "type": "string",
          "maxLength": 280
        },
        "userName": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "scopes": {
        "read:pets": "read your pets",
        "write:pets": "modify pets in your account"
      }
    }
  },
  "tags": [
    {
      "description": "Authorization of users",
      "name": "user"
    },
    {
      "description": "Tweet Operations",
      "name": "Operation"
    }
  ]
}`))
}
