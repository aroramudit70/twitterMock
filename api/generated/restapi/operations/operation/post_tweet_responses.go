// Code generated by go-swagger; DO NOT EDIT.

package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"twitterMock/api/generated/models"
)

// PostTweetOKCode is the HTTP code returned for type PostTweetOK
const PostTweetOKCode int = 200

/*PostTweetOK OK

swagger:response postTweetOK
*/
type PostTweetOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostTweetOK creates PostTweetOK with default headers values
func NewPostTweetOK() *PostTweetOK {

	return &PostTweetOK{}
}

// WithPayload adds the payload to the post tweet o k response
func (o *PostTweetOK) WithPayload(payload string) *PostTweetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post tweet o k response
func (o *PostTweetOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTweetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostTweetBadRequestCode is the HTTP code returned for type PostTweetBadRequest
const PostTweetBadRequestCode int = 400

/*PostTweetBadRequest Bad Request

swagger:response postTweetBadRequest
*/
type PostTweetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostTweetBadRequest creates PostTweetBadRequest with default headers values
func NewPostTweetBadRequest() *PostTweetBadRequest {

	return &PostTweetBadRequest{}
}

// WithPayload adds the payload to the post tweet bad request response
func (o *PostTweetBadRequest) WithPayload(payload *models.ErrResponse) *PostTweetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post tweet bad request response
func (o *PostTweetBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTweetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTweetUnauthorizedCode is the HTTP code returned for type PostTweetUnauthorized
const PostTweetUnauthorizedCode int = 401

/*PostTweetUnauthorized UnAuthorized

swagger:response postTweetUnauthorized
*/
type PostTweetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostTweetUnauthorized creates PostTweetUnauthorized with default headers values
func NewPostTweetUnauthorized() *PostTweetUnauthorized {

	return &PostTweetUnauthorized{}
}

// WithPayload adds the payload to the post tweet unauthorized response
func (o *PostTweetUnauthorized) WithPayload(payload *models.ErrResponse) *PostTweetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post tweet unauthorized response
func (o *PostTweetUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTweetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTweetNotFoundCode is the HTTP code returned for type PostTweetNotFound
const PostTweetNotFoundCode int = 404

/*PostTweetNotFound Not Found

swagger:response postTweetNotFound
*/
type PostTweetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostTweetNotFound creates PostTweetNotFound with default headers values
func NewPostTweetNotFound() *PostTweetNotFound {

	return &PostTweetNotFound{}
}

// WithPayload adds the payload to the post tweet not found response
func (o *PostTweetNotFound) WithPayload(payload *models.ErrResponse) *PostTweetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post tweet not found response
func (o *PostTweetNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTweetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTweetInternalServerErrorCode is the HTTP code returned for type PostTweetInternalServerError
const PostTweetInternalServerErrorCode int = 500

/*PostTweetInternalServerError Internal Server Error

swagger:response postTweetInternalServerError
*/
type PostTweetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewPostTweetInternalServerError creates PostTweetInternalServerError with default headers values
func NewPostTweetInternalServerError() *PostTweetInternalServerError {

	return &PostTweetInternalServerError{}
}

// WithPayload adds the payload to the post tweet internal server error response
func (o *PostTweetInternalServerError) WithPayload(payload *models.ErrResponse) *PostTweetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post tweet internal server error response
func (o *PostTweetInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTweetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
