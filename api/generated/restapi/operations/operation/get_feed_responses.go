// Code generated by go-swagger; DO NOT EDIT.

package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"twitterMock/api/generated/models"
)

// GetFeedOKCode is the HTTP code returned for type GetFeedOK
const GetFeedOKCode int = 200

/*GetFeedOK OK

swagger:response getFeedOK
*/
type GetFeedOK struct {

	/*
	  In: Body
	*/
	Payload models.Feed `json:"body,omitempty"`
}

// NewGetFeedOK creates GetFeedOK with default headers values
func NewGetFeedOK() *GetFeedOK {

	return &GetFeedOK{}
}

// WithPayload adds the payload to the get feed o k response
func (o *GetFeedOK) WithPayload(payload models.Feed) *GetFeedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feed o k response
func (o *GetFeedOK) SetPayload(payload models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Feed{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFeedBadRequestCode is the HTTP code returned for type GetFeedBadRequest
const GetFeedBadRequestCode int = 400

/*GetFeedBadRequest Bad Request

swagger:response getFeedBadRequest
*/
type GetFeedBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetFeedBadRequest creates GetFeedBadRequest with default headers values
func NewGetFeedBadRequest() *GetFeedBadRequest {

	return &GetFeedBadRequest{}
}

// WithPayload adds the payload to the get feed bad request response
func (o *GetFeedBadRequest) WithPayload(payload *models.ErrResponse) *GetFeedBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feed bad request response
func (o *GetFeedBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeedBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeedNotFoundCode is the HTTP code returned for type GetFeedNotFound
const GetFeedNotFoundCode int = 404

/*GetFeedNotFound Not Found

swagger:response getFeedNotFound
*/
type GetFeedNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetFeedNotFound creates GetFeedNotFound with default headers values
func NewGetFeedNotFound() *GetFeedNotFound {

	return &GetFeedNotFound{}
}

// WithPayload adds the payload to the get feed not found response
func (o *GetFeedNotFound) WithPayload(payload *models.ErrResponse) *GetFeedNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feed not found response
func (o *GetFeedNotFound) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeedNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeedInternalServerErrorCode is the HTTP code returned for type GetFeedInternalServerError
const GetFeedInternalServerErrorCode int = 500

/*GetFeedInternalServerError Internal Server Error

swagger:response getFeedInternalServerError
*/
type GetFeedInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewGetFeedInternalServerError creates GetFeedInternalServerError with default headers values
func NewGetFeedInternalServerError() *GetFeedInternalServerError {

	return &GetFeedInternalServerError{}
}

// WithPayload adds the payload to the get feed internal server error response
func (o *GetFeedInternalServerError) WithPayload(payload *models.ErrResponse) *GetFeedInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feed internal server error response
func (o *GetFeedInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
