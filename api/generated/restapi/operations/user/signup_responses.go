// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"twitterMock/api/generated/models"
)

// SignupOKCode is the HTTP code returned for type SignupOK
const SignupOKCode int = 200

/*SignupOK OK

swagger:response signupOK
*/
type SignupOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewSignupOK creates SignupOK with default headers values
func NewSignupOK() *SignupOK {

	return &SignupOK{}
}

// WithPayload adds the payload to the signup o k response
func (o *SignupOK) WithPayload(payload string) *SignupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signup o k response
func (o *SignupOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// SignupBadRequestCode is the HTTP code returned for type SignupBadRequest
const SignupBadRequestCode int = 400

/*SignupBadRequest Bad Request

swagger:response signupBadRequest
*/
type SignupBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewSignupBadRequest creates SignupBadRequest with default headers values
func NewSignupBadRequest() *SignupBadRequest {

	return &SignupBadRequest{}
}

// WithPayload adds the payload to the signup bad request response
func (o *SignupBadRequest) WithPayload(payload *models.ErrResponse) *SignupBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signup bad request response
func (o *SignupBadRequest) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignupBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignupUnauthorizedCode is the HTTP code returned for type SignupUnauthorized
const SignupUnauthorizedCode int = 401

/*SignupUnauthorized UnAuthorized

swagger:response signupUnauthorized
*/
type SignupUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewSignupUnauthorized creates SignupUnauthorized with default headers values
func NewSignupUnauthorized() *SignupUnauthorized {

	return &SignupUnauthorized{}
}

// WithPayload adds the payload to the signup unauthorized response
func (o *SignupUnauthorized) WithPayload(payload *models.ErrResponse) *SignupUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signup unauthorized response
func (o *SignupUnauthorized) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignupUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignupConflictCode is the HTTP code returned for type SignupConflict
const SignupConflictCode int = 409

/*SignupConflict Conflict

swagger:response signupConflict
*/
type SignupConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewSignupConflict creates SignupConflict with default headers values
func NewSignupConflict() *SignupConflict {

	return &SignupConflict{}
}

// WithPayload adds the payload to the signup conflict response
func (o *SignupConflict) WithPayload(payload *models.ErrResponse) *SignupConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signup conflict response
func (o *SignupConflict) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignupConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignupInternalServerErrorCode is the HTTP code returned for type SignupInternalServerError
const SignupInternalServerErrorCode int = 500

/*SignupInternalServerError Internal Server Error

swagger:response signupInternalServerError
*/
type SignupInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrResponse `json:"body,omitempty"`
}

// NewSignupInternalServerError creates SignupInternalServerError with default headers values
func NewSignupInternalServerError() *SignupInternalServerError {

	return &SignupInternalServerError{}
}

// WithPayload adds the payload to the signup internal server error response
func (o *SignupInternalServerError) WithPayload(payload *models.ErrResponse) *SignupInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the signup internal server error response
func (o *SignupInternalServerError) SetPayload(payload *models.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignupInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
